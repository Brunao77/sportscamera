---
import Layout from '../layouts/Layout.astro'
import Input from '../components/Input.astro'
import Button from '../components/Button.astro';
import Email from '../icons/Email.astro';
import Password from '../icons/Password.astro';
import { lucia } from "../auth.ts";
import { UserModel } from "../models/user.js"
import bcrypt from "bcrypt";

const user = Astro.locals.user;
if (user) {
	return Astro.redirect("/video-list");
}

let error = ''
if(Astro.request.method === 'POST'){
	try {
		const data = await Astro.request.formData();
		const email = data.get("email");
		const password = data.get("password");

		if (!email || !password)
			error = 'Los campos son requeridos'

		const user = await UserModel.findWithEmail({ email });
		
		if (!user)
			error = 'Credenciales incorrectas'
			
		const checkPassword = await bcrypt.compare(password, user.password);

		if (!checkPassword)
			error = 'Credenciales incorrectas'

		const session = await lucia.createSession(user.user_id, {});
		const sessionCookie = lucia.createSessionCookie(session.id);
		Astro.cookies.set(sessionCookie.name, sessionCookie.value, sessionCookie.attributes)

		if(!error)
			return Astro.redirect("/video-list");
	} catch (error) {
		if (error instanceof Error) {
		console.error(error.message);
		}
	}
}
---

<Layout title="SportsCamera!">
	<section class="bg-white md:px-32 h-full md:rounded-l-xl md:rounded-br-none flex flex-col gap-5 items-center justify-center px-20 py-20">
		<strong class="text-5xl text-primary font-medium text-nowrap">Iniciar sesion</strong>
		<form method="POST" class="flex flex-col gap-4" id="loginForm">
			<Input placeholder="Usuario" name="email" required type="email">
				<Email />
			</Input>
			<Input placeholder="Contraseña" name='password' required type="password" minlength="5">
				<Password />
			</Input>
			<span class="text-center text-red-500 text-sm hidden" id="errorSpan"></span>
			<Button type="submit" id="login_btn">
				<span id="content_btn">INICIAR SESION</span>
				<div class='w-6 h-6 border-4 border-ice border-l-transparent rounded-full animate-spin hidden' id="spinner"></div>
			</Button>
		</form>
		<a class="text-terciary cursor-pointer" href="/password_reset">¿Olvidaste tu contraseña?</a>
		<a class="text-terciary cursor-pointer" href="/contact">Contactanos!</a>
	</section>
    <section class="bg-primary text-white text-center flex flex-col items-center justify-center md:rounded-r-xl md:rounded-tl-none gap-5 py-12 md:py-0">
		<h1 class="font-medium text-5xl">SportsCamera!</h1>
		<p class="m-0 font-light text-l w-3/4">Servicio de grabacion en establecimientos deportivos</p>
		<a class="rounded-2xl border p-3" href="/">BUSCAR VIDEO</a>
	</section>
	<script is:inline>
		document.addEventListener('astro:page-load', () => {
			const form = document.getElementById('loginForm')
			form.addEventListener('submit', async function(event){
				event.preventDefault();
	
				const loginBtn = document.getElementById('login_btn');
				const buttonContent = document.getElementById('content_btn');
				const spinner = document.getElementById('spinner');
	
				
				loginBtn.disabled = true
	
				buttonContent.classList.add('hidden');
				spinner.classList.remove('hidden');
				
				const formData = new FormData(this);
	
				const formDataObject = {};
				formData.forEach((value, key) => {
					formDataObject[key] = value;
				});
	
				const inputs = form.querySelectorAll('input');
				inputs.forEach(function(input) {
					input.disabled = true;
				});
				
	
				try {
					const response = await fetch('/api/user/login', {
						method: 'POST',
						headers: {
							'Content-Type': 'application/json'
						},
						body: JSON.stringify(formDataObject)
					});
					if (response.status === 200) {
						window.location.href = '/video-list';
						
					} else {
						const res = await response.json()
						const errorSpan = document.getElementById('errorSpan');
						errorSpan.textContent = res.message
						errorSpan.classList.remove('hidden');
						inputs.forEach(function(input) {
							input.disabled = false;
						});
						loginBtn.disabled = false
	
						spinner.classList.add('hidden');
						buttonContent.classList.remove('hidden');
					}
				} catch (error) {
					console.error('Error en la solicitud:', error);
				}
			});
		}, { once: true })
	</script>
</Layout>
