---
import Layout from "../layouts/Layout.astro"
import Navbar from "../components/Navbar.astro"
import Input from "../components/Input.astro"
import { EstablishmentModel } from "../models/establishment";
import { CameraModel } from "../models/camera";
import Button from "../components/Button.astro";
import Establishment from "../icons/Establishment.astro";
import Camera from "../icons/Camera.astro";
import Address from "../icons/Address.astro";
import Phone from "../icons/Phone.astro";

const user = Astro.locals.user;
if (!user) {
	return Astro.redirect("/sign-in");
}

if (!user.payment) {
	return Astro.redirect("/payment");
}

const { establishment_id } = user

const establishment = await EstablishmentModel.getById({ establishment_id })

const cameras = await CameraModel.getAll({establishment_id});

const errors = { name: "", cameras: [], address: "" };
const updateData = { name: "", cameras: [], address: "", phone:""};
if(Astro.request.method === 'POST'){
    try {
		const data = await Astro.request.formData();
		const name = data.get("name");
        const address = data.get("address");
        const phone = data.get("phone");
        const camerasData = [];
        data.forEach((value, key) => {
            if(key.startsWith('camera_')){
                if(!value) errors.cameras.push('Cámara requerida')
                camerasData.push(value);
            }
        })

        if(!name)
            errors.name += 'Nombre requerido'
        if(!address)
            errors.address += 'Dirección requerida'

        const hasErrors = Object.values(errors).some(msg => {
            if (Array.isArray(msg)) {
                return msg.length > 0;
            }
            return !!msg;
        })
        if(!hasErrors){
            await EstablishmentModel.update({ establishment_id, name, address, phone })
            updateData.name += name
            updateData.address += address
            updateData.phone += phone
            cameras.forEach(async ({camera_id}, index)=>{
                const field_name = camerasData[index]
                updateData.cameras.push(field_name)
                await CameraModel.updateName({ camera_id, field_name })
            })
        }
	} catch (error) {
		console.error(error);
	}
}

---

<Layout title="SportsCamera!">
	<Navbar />
	<section class="bg-white h-full md:rounded-r-xl text-center z-0 max-w-4xl">
		<strong class="font-medium text-2xl md:text-3xl text-primary text-nowrap">Configuracion</strong>
        <form method="POST"  class="text-start p-3">
            <strong class="text-primary text-2xl font-medium">Establecimiento</strong>
            <div class="flex flex-wrap my-2 gap-4">
                <label>
                    Nombre
                    <Input placeholder="Nombre" name="name" value={updateData.name ? updateData.name : establishment.name} type="text" required>
                        <Establishment />
                    </Input>
                    {errors.name && <span class="text-red-500 text-md">{errors.name}</span>}
                </label>
                {cameras.map(({field_name}, index)=>{
                    return <label>
                        Nombre cámara {index+1}
                        <Input type="text" placeholder={`Camara ${index+1}`} name={`camera_${index+1}`} value={updateData.cameras[index] ? updateData.cameras[index] : field_name} required>
                            <Camera />
                        </Input>
                        {errors.cameras[index] && <span class="text-red-500 text-md">{errors.cameras[index]}</span>}
                    </label>
                })}
                <label>
                    Dirección
                    <Input placeholder="Dirección" name="address" value={updateData.address ? updateData.address : establishment.address} type="text" required>
                        <Address />
                    </Input>
                    {errors.address && <span class="text-red-500 text-md">{errors.address}</span>}
                </label>
                <label>
                    Teléfono (ej: 3114681299)
                    <Input placeholder="Teléfono" name="phone" value={updateData.phone ? updateData.phone : establishment.phone} type="tel" pattern="[0-9]*" maxlength=20>
                        <Phone />
                    </Input>
                </label>
            </div>
            <div class="flex md:justify-end mt-5 gap-5">
                <Button type="submit">GUARDAR CAMBIOS</Button>
            </div>
        </form>
	</section>
</Layout>